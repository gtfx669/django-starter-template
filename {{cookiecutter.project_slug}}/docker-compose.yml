services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
      args:
        ENVIRONMENT: dev
        DJANGO_ENV: dev
    depends_on:
      - postgres
    environment:
      - PYTHONDONTWRITEBYTECODE=1
    ports:
      - "8000:8000"
    env_file: ./dev.env 
  postgres:
    image: "postgres:16-alpine"
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file: ./dev.env 
    ports:
      - "5432:5432"
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    env_file: ./dev.env 
    ports:
      - "5050:80"
    restart: always

  redis:
    image: redis:7.4-alpine
    restart: always
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/var/lib/redis
      - redis-conf:/usr/local/etc/redis/redis.conf
    depends_on:
      - postgres
  worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
      args:
        ENVIRONMENT: dev
        DJANGO_ENV: dev
    container_name: worker01
    depends_on:
      - postgres
      - redis
    environment:
      - PYTHONDONTWRITEBYTECODE=1
    env_file: ./dev.env 
    command: celery -A {{cookiecutter.project_slug}} worker -l info

volumes:
  pgdata:
  redis-data:
  redis-conf:
